package ru.vsu.cs.grankina_a_v;

import javax.swing.*;

import ru.vsu.cs.grankina_a_v.functions.*;
import ru.vsu.cs.grankina_a_v.models.MySpiral;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainWindow extends JFrame {
    private JPanel contentPane;
    private DrawPanel drawPanel;
    private JPanel secondPanel;
    private JButton createSpiral;
    private JSpinner turnsSpinner;
    private JComboBox radiusFunc;
    private JSpinner countOfPointsSpinner;
    private JSpinner radiusSpinner;
    private JSpinner thicknessSpinner;


    public MainWindow() {
        $$$setupUI$$$();
        setContentPane(contentPane);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(true);
        setSize(1000, 800);

        radiusSpinner.setModel(new SpinnerNumberModel(1, 0.01f, 5, 0.05f));
        countOfPointsSpinner.setModel(new SpinnerNumberModel(10, 5, 200, 5));
        thicknessSpinner.setModel(new SpinnerNumberModel(0.5f, 0.01f, 1, 0.01f));
        turnsSpinner.setModel(new SpinnerNumberModel(8, 1, 50, 1));

        radiusFunc.addItem(IFunctionValues.DEFAULT);
        radiusFunc.addItem(IFunctionValues.SINUS);
        radiusFunc.addItem(IFunctionValues.COSINUS);
        radiusFunc.addItem(IFunctionValues.ARCTANGENT);
        radiusFunc.addItem(IFunctionValues.EXPONENT);
        radiusFunc.addItem(IFunctionValues.SQRT);

        createSpiral.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            IFunction fRad = null;

            switch ((IFunctionValues) radiusFunc.getSelectedItem()) {
                case SINUS: {
                    fRad = new SinusFunction();
                    break;
                }
                case COSINUS: {
                    fRad = new CosinusFunction();
                    break;
                }

                case ARCTANGENT: {
                    fRad = new AtanFunction();
                    break;
                }

                case EXPONENT: {
                    fRad = new ExponentFunction();
                    break;
                }
                case DEFAULT: {
                    fRad = new DefaultFunction();
                    break;
                }
                case SQRT: {
                    fRad = new SqrtFunction();
                    break;
                }
            }
            int countOfTurns = (int) turnsSpinner.getValue();
            int countOfPointsPerTurn = (int) countOfPointsSpinner.getValue();
            float radius = (float) (double) radiusSpinner.getValue();
            float thickness = (float) (double) thicknessSpinner.getValue();
            int countOfPointsPerTick = (int) countOfPointsSpinner.getValue();

            drawPanel.setHelix(new MySpiral(countOfTurns, countOfPointsPerTurn, radius,
                     thickness, countOfPointsPerTick, fRad));
            drawPanel.repaint();
        }
    });
}

    private void createUIComponents() {
        secondPanel = new JPanel();
        drawPanel = new DrawPanel();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        secondPanel = new JPanel();
        secondPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(10, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(secondPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        secondPanel.add(drawPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 4, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(100, 100), new Dimension(800, 800), new Dimension(2000, 2000), 0, false));
        createSpiral = new JButton();
        createSpiral.setText("Создать пружину (спираль)");
        secondPanel.add(createSpiral, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        turnsSpinner = new JSpinner();
        secondPanel.add(turnsSpinner, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radiusFunc = new JComboBox();
        secondPanel.add(radiusFunc, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        countOfPointsSpinner = new JSpinner();
        secondPanel.add(countOfPointsSpinner, new com.intellij.uiDesigner.core.GridConstraints(9, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radiusSpinner = new JSpinner();
        secondPanel.add(radiusSpinner, new com.intellij.uiDesigner.core.GridConstraints(9, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        thicknessSpinner = new JSpinner();
        secondPanel.add(thicknessSpinner, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Количество витков");
        secondPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Толщина");
        secondPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Количество точек");
        secondPanel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(8, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Радиус");
        secondPanel.add(label4, new com.intellij.uiDesigner.core.GridConstraints(8, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        final JLabel label7 = new JLabel();
        label7.setText("Функция радиуса");
        secondPanel.add(label7, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    public static void main(String[] args) {
        MainWindow dialog = new MainWindow();
        dialog.pack();
        dialog.setVisible(true);
        System.exit(0);
    }
}
